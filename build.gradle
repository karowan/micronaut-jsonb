plugins {
    id("org.jetbrains.kotlin.jvm") version "1.4.10"
    id("org.jetbrains.kotlin.kapt") version "1.4.10"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.4.10"
    id("com.github.johnrengelman.shadow") version "6.1.0"
    id("io.micronaut.application") version "1.2.0"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
    jcenter()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}

dependencies {
    kapt "io.micronaut:micronaut-inject-java"
    kapt("io.micronaut.data:micronaut-data-processor")
    kapt "com.fasterxml.jackson.core:jackson-annotations"
    implementation "io.micronaut:micronaut-http"
    implementation "io.micronaut.sql:micronaut-jdbc"
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("io.micronaut.kotlin:micronaut-kotlin-extension-functions")

    implementation("io.micronaut.liquibase:micronaut-liquibase")
    implementation "com.fasterxml.jackson.core:jackson-databind:2.11.3"
    implementation 'jakarta.persistence:jakarta.persistence-api:2.2.3'
    implementation "io.micronaut:micronaut-validation"
    runtimeOnly "io.micronaut.sql:micronaut-jdbc-tomcat"
    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
    runtimeOnly "org.postgresql:postgresql"
    testImplementation "org.testcontainers:postgresql:1.15.1"
}


application {
    mainClass.set("com.example.ApplicationKt")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }


}
